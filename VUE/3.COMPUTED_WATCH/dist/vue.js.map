{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalApi.js","../src/compiler/parse.js","../src/compiler/index.js","../src/observe/dep.js","../src/observe/watcher.js","../src/vdom/index.js","../src/lifeCycle.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["// 静态方法\r\nconst strats = {}\r\nconst LIFECYCLE = [\r\n    'beforeCreate',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n    strats[hook] = function (p, c) {\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c)\r\n            } else {\r\n                return [c]\r\n            }\r\n        } else {\r\n            return p\r\n        }\r\n    }\r\n\r\n})\r\n\r\nexport function mergeOptions(parent, child) {\r\n    // 我们期望将用户的选项和全局的options进行合并\r\n    const options = {}\r\n    for (let key in parent) {\r\n        mergeField(key)\r\n    }\r\n\r\n    for (let key in child) {\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        //    策略模式 用策略模式减少if、else\r\n        if (strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            options[key] = child[key] || parent[key]\r\n        }\r\n    }\r\n\r\n    return options\r\n}","import { mergeOptions } from \"./utils\"\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    // strats.data strats.computed...\r\n    Vue.options = {}\r\n\r\n    Vue.mixin = function (mixin) {\r\n        this.options = mergeOptions(this.options, mixin)\r\n        return this\r\n    }\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 他匹配到的分组是一个 标签名  <xxx 匹配到的是开始 标签的名字\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);  // 匹配的是</xxxx>  最终匹配到的分组就是结束标签的名字\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  // 匹配属性\r\n// 第一个分组就是属性的key value 就是 分组3/分组4/分组五\r\nconst startTagClose = /^\\s*(\\/?)>/;  // <div> <br/>\r\n\r\n// vue3 采用的不是使用正则\r\n// 对模板进行编译处理\r\n// htmlparser2——编译模板的插件\r\n// 语法树\r\n// {\r\n//     tag:'div',\r\n//     type:1,\r\n//     attrs:[{name,age,address}],\r\n//     parent:null,\r\n//     children:[\r\n//         tag:'div',\r\n//         type:1,\r\n//         attrs:[{name,age,address}],\r\n//         parent:null,\r\n//         children:[]\r\n//     ]\r\n// }\r\n\r\nexport function parseHTML(html) { // html最开始肯定是一个 hello</div>\r\n    const ELEMENT_TYPE = 1\r\n    const TEXT_TYPE = 3\r\n    const stack = [] // 用于存放元素\r\n    let currentParent // 栈中的最后一个\r\n    let root\r\n\r\n    // 最终需要转化成一棵抽象语法树 \r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs)\r\n        if (!root) { // 看一下是否是空树\r\n            root = node // 如果为空则当前是树的根节点\r\n        }\r\n        if (currentParent) {\r\n            node.parent = currentParent\r\n            currentParent.children.push(node)\r\n        }\r\n        stack.push(node)\r\n        currentParent = node\r\n        // console.log(tag, attrs, '开始')\r\n    }\r\n    function chars(text) {\r\n        text = text.replace(/\\s/g, '')\r\n        text && currentParent.children.push({\r\n            type: TEXT_TYPE,\r\n            text,\r\n            parent: currentParent\r\n        })\r\n        // console.log(text, '文本')\r\n    }\r\n    function end(tag) {\r\n        let node = stack.pop() // 弹出最后一个，校验标签是否合法\r\n        currentParent = stack[stack.length - 1]\r\n        // console.log(tag, '结束')\r\n    }\r\n    function advance(n) { // 截取\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1], // 标签名 div\r\n                attrs: []\r\n            }\r\n            advance(start[0].length) // <div\r\n\r\n            // 如果不是开始标签的结束 就一直匹配下去\r\n            let attr, end\r\n            // 去掉属性\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n            }\r\n            // 去掉结束标签\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            // console.log(match)\r\n            return match // 不是开始标签\r\n        }\r\n        return false\r\n\r\n    }\r\n    while (html) {\r\n        // 如果textEnd 为0 说明是一个开始标签或者结束标签\r\n        let textEnd = html.indexOf('<') // 如果indexOf中的索引是0 则说明是个标签\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag()\r\n            if (startTagMatch) { // 解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            let endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                // console.log(endTagMatch)\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch)\r\n                continue\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd) // 文本内容\r\n            if (text) {\r\n                chars(text)\r\n                advance(text.length)\r\n                continue\r\n            }\r\n        }\r\n    }\r\n    console.log(root)\r\n    return root\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction genProps(attrs) {\r\n    let str = '' // {name:value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        if (attr.name === 'style') {\r\n            // color:red:width:50 => {color:red}\r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}` // 把最后一个逗号去掉\r\n\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; // {{ asdsadsa }}  匹配到的内容就是我们表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        return codegen(node)\r\n    } else {\r\n        // 文本 两种情况 {{name}}hello  {{age}}\r\n        let text = node.text\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            // v_(_s(name)+'hello'+_s(name)\r\n            let tokens = []\r\n            let match\r\n            defaultTagRE.lastIndex = 0\r\n            let lastIndex = 0\r\n            // split\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index // 匹配的位置 {{name}} hello {{name}} hello\r\n                if (index > lastIndex) {\r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`)\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if (lastIndex < text.length) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            // console.log(tokens)\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\n\r\nfunction genChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n\r\n}\r\n\r\nfunction codegen(ast) {\r\n    let children = genChildren(ast.children)\r\n    let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n        }${ast.children.length ? `,${children}` : ''\r\n        })`\r\n    return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n    // 1.就是将template转化成ast语法树\r\n    let ast = parseHTML(template)\r\n\r\n    // 2.生成render方法 （render方法执行后的结果就是 虚拟DOM）\r\n    // console.log(template)\r\n\r\n    let code = codegen(ast)\r\n    console.log(code)\r\n    code = `with(this){return ${code}}`\r\n    let render = new Function(code) // 根据代码生成render函数\r\n    // _c('div',{id:\"app\",style:{\"color\":\" blue\",\"background\":\" aqua\"}},_c('div',{style:{\"color\":\" red\"}},_v(_s(name)+\"hello\"+_s(age)+\"hello\")),_c('span',null,_v(\"world\")))\r\n    return render\r\n}","let id = 0\r\n\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++ // 属性的dep要手机watcher\r\n        this.subs = [] // 这里存放着当前属性对应的watcher有哪些\r\n    }\r\n    depend() {\r\n        // 这里我们不希望放置重复的watcher，而且刚才只是一个单向的关系 dep->watcher\r\n        // watcher 记录dep 多对多\r\n        // this.subs.push(Dep.target)\r\n        Dep.target.addDep(this) // 让watcher记住dep\r\n\r\n    }\r\n    addSub(watcher) {\r\n        this.subs.push(watcher)\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update()) // 告诉watcher要更新\r\n    }\r\n}\r\nDep.target = null\r\n\r\nlet stack = []\r\nexport function pushTarget(watcher) {\r\n    stack.push(watcher)\r\n    Dep.target = watcher\r\n}\r\nexport function popTarget() {\r\n    stack.pop()\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\nexport default Dep","import Dep, { popTarget, pushTarget } from \"./dep\"\r\n\r\nlet id = 0\r\n// 1）当我们创建渲染watcher的时候我们会把当前的渲染watcher放到Dep.target上\r\n// 2）调用_render() 会取值 走到get上\r\n\r\n// 每个属性有一个dep（属性就是被观察者），watcher就是观察者（属性变化了就会通知观察者来更新）-》 观察者模式\r\n\r\nclass Watcher { // 不同组件有不同的watcher\r\n    constructor(vm, fn, options) {\r\n        // fn渲染函数 updateComponent\r\n        this.id = id++\r\n        this.renderWatcher = options // 是一个渲染watcher\r\n        this.getter = fn // 意味着调用这个函数可以发生取值操作\r\n        this.deps = [] // 后续我们实现计算属性和一些清理工作需要用到\r\n        this.depsId = new Set()\r\n        this.lazy = options.lazy\r\n        this.dirty = this.lazy // 缓存值\r\n\r\n        // 默认不执行\r\n        console.log(this.lazy)\r\n        this.lazy ? undefined : this.get()\r\n    }\r\n    // 让渲染逻辑记住dep\r\n    addDep(dep) { // 一个组件 对应着多个属性 重复的属性也不用记录\r\n        let id = dep.id\r\n        if (!this.depsId.has(id)) {\r\n            console.log('dep', dep)\r\n\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            dep.addSub(this) // watcher已经记住了dep而且去重了，此时让dep也记住watcher\r\n        }\r\n    }\r\n    evaluate() {\r\n        this.value = this.get() // 获取到用户函数的返回值 并且还要标识为脏\r\n        this.dirty = false\r\n    }\r\n    get() {\r\n        console.log(this)\r\n        // 把watcher暴露在全局上\r\n        pushTarget(this)  // 静态属性只有一份\r\n        let value = this.getter() // 会去vm上取值\r\n        popTarget() // 渲染完毕后就清空\r\n        return value\r\n    }\r\n    update() {\r\n        // 异步更新\r\n        queueWatcher(this) // 吧当前的watcher缓存其阿里\r\n        // this.get() // 重新渲染\r\n    }\r\n    run() {\r\n        console.log('run')\r\n        this.get()\r\n    }\r\n}\r\nlet queue = []\r\nlet has = {}\r\nlet pending = false // 防抖\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.slice(0)\r\n    flushQueue.forEach(q => q.run()) // 在刷新的过程中可能还有新的watcher，重新放到queue中\r\n    queue = []\r\n    has = {}\r\n}\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id\r\n    if (!has[id]) {\r\n        queue.push(watcher)\r\n        has[id] = true\r\n        console.log(queue)\r\n        // 不管我们的update执行多次，但是最终只执行一轮刷新操作\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue, 0)\r\n            pending = true\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.slice(0)\r\n    waiting = false\r\n    callbacks = []\r\n    cbs.forEach(cb => cb()) // 按照顺序依次执行\r\n}\r\n\r\nlet timerFunc\r\nif (Promise) {\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)\r\n    }\r\n} else if (MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks) // 这里传入的回调是异步执行的\r\n    let textNode = document.createTextNode(1)\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2\r\n    }\r\n} else if (setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\nexport function nextTick(cb) { // 先内部还是先用户的？\r\n    callbacks.push(cb) // 维护nextTick中的callback方法\r\n    if (!waiting) {\r\n        timerFunc()\r\n        waiting = true\r\n    }\r\n\r\n}\r\n// 需要给每一个属性增加一个dep，目的就是收集watcher\r\n// 一个视图中（组件） 有多少个属性 （n个属性会对应一个视图） n个dep对应一个watcher\r\n// 1个属性对应这多个视图\r\n// 多对多的关系\r\nexport default Watcher","// h() _c()\r\nexport function createElementVNode(vm, tag, data, ...children) {\r\n    if (data == null) {\r\n        data = []\r\n    }\r\n    let key = data.key\r\n    if (key) {\r\n        delete data.key\r\n    }\r\n    return vnode(vm, tag, key, data, children)\r\n}\r\n\r\n// _v\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n// ast一样吗？ast做的是语法层面的转化 他描述的是语法本身\r\n// 我们的虚拟dom 是描述的dom元素，可以增加一些自定义属性（描述dom的）\r\nfunction vnode(vm, tag, key, data, children, text) {\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        data,\r\n        children,\r\n        text\r\n    }\r\n}","import Watcher from \"./observe/watcher\"\r\nimport { createElementVNode, createTextVNode } from \"./vdom\"\r\n\r\nfunction createElm(vnode) {\r\n    let { tag, data, children, text } = vnode\r\n    if (typeof tag === 'string') {\r\n        vnode.el = document.createElement(tag) // 这里将真实及诶单和虚拟节点对应起来，后续如果修改属性了\r\n\r\n        patchProps(vnode.el, data) // 更新属性\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        })\r\n\r\n    } else {\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\nfunction patchProps(el, props) {\r\n    for (let key in props) { // style{color:'red'}\r\n        if (key == 'style') {\r\n            for (let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName]\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction patch(oldVNode, vnode) {\r\n    // 写的是初渲染流程\r\n    const isRealElement = oldVNode.nodeType\r\n    if (isRealElement) {\r\n        const elm = oldVNode // 获取真实元素\r\n        const parentElm = elm.parentNode // 拿到父元素\r\n        let newElm = createElm(vnode)\r\n        parentElm.insertBefore(newElm, elm.nextSibling) // 先插入新节点\r\n        parentElm.removeChild(elm) // 删除老节点\r\n        // console.log(newElm)\r\n        return newElm\r\n    } else {\r\n        // diff算法\r\n    }\r\n\r\n}\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function (vnode) { // 将cnode转化成真实dom\r\n        const vm = this\r\n        const el = vm.$el\r\n        console.log('update', vnode)\r\n        // patch既有初始化的功能 又有更新的功能\r\n        vm.$el = patch(el, vnode)\r\n    }\r\n    // _c('div',{id:\"app\",style:{\"color\":\" blue\",\"background\":\" aqua\"}},_c('div',{style:{\"color\":\" red\"}},_v(_s(name)+\"hello\"+_s(age)+\"hello\")),_c('span',null,_v(\"world\")))\r\n    // _c _v和虚拟节点相关\r\n    // _c('div',{},...children)\r\n    Vue.prototype._c = function () {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._v = function () {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function (value) {\r\n        if (typeof value !== 'object') return value\r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function () {\r\n        // 当渲染的时候会去实例中取值，我们就可以将属性和视图绑定在一起\r\n        return this.$options.render.call(this) // 通过ast语法转义后生成的render方法\r\n    }\r\n}\r\nexport function mountComponent(vm, el) {\r\n    // 1.调用render方法产生虚拟节点 虚拟ODM\r\n    // 2.根据虚拟DOM产生真实DOM\r\n    // 3.插入到el元素中\r\n    vm.$el = el // 这里的el 是通过querySelector处理过的\r\n\r\n    const updateComponent = () => {\r\n        vm._update(vm._render()) // vm.$options.render() 虚拟节点\r\n    }\r\n    let xx = new Watcher(vm, updateComponent, true) // true用于标识是一个渲染watcher\r\n    console.log(xx)\r\n\r\n}\r\n\r\n// vue核心流程\r\n// 1）创造了响应式数据\r\n// 2）模板转换成ast语法树\r\n// 3）将ast语法树转换了render函数\r\n// 4）后续每次数据更新可以只执行render函数（无需再次执行ast转化的过程）\r\n\r\n// render函数会去产生虚拟节点（使用响应式数据）\r\n// 根据生成的虚拟节点创造真实的DOM\r\n\r\nexport function callHook(vm, hook) { // 调用钩子函数\r\n    const handlers = vm.$options[hook]\r\n    if (handlers) {\r\n        handlers.forEach(handler => handler.call(vm))\r\n    }\r\n}\r\n","import Dep from \"./dep\"\r\n\r\nclass Observer {\r\n    constructor(data) {\r\n        // Object.defineProperty只能劫持已经存在的属性，后增的，或者删除的 不知道（vue里面会为此单独写一些api $set $delete）\r\n        this.walk(data)\r\n    }\r\n    walk(data) { // 循环对象 对属性依次劫持\r\n        // “重新定义”属性\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n\r\n    }\r\n}\r\nexport function defineReactive(target, key, value) { //闭包 属性劫持\r\n    observe(value) // 对所有的对象都进行属性劫持\r\n    let dep = new Dep() // 每一个属性都有一个dep\r\n    Object.defineProperty(target, key, {\r\n        get() { // 取值的时候 会执行get\r\n            console.log('用户取值了', Dep.target)\r\n            if (Dep.target) {\r\n                dep.depend() // 让这个属性的收集器记住当前的watcher this.subs.push(Dep.target)\r\n            }\r\n            return value\r\n        },\r\n        set(newValue) { // 修改的时候 会执行set\r\n            console.log('用户设置了')\r\n            if (newValue === value) return\r\n            value = newValue\r\n            dep.notify() // 通知更新\r\n        }\r\n    })\r\n}\r\nexport function observe(data) {\r\n    // 对这个对象进行劫持\r\n\r\n    if (typeof data !== 'object' || data == null) {\r\n        return  // 只对对象进行劫持\r\n    }\r\n\r\n    // 如果一个对象被劫持过了，就不需要再被劫持（要判断一个对象是否被劫持过，可以增添一个实例，用实例来判断是否被劫持过）\r\n    return new Observer(data)\r\n}","import { observe } from \"./observe/index\"\r\nimport Watcher from \"./observe/watcher\"\r\nexport function initState(vm) {\r\n    const opts = vm.$options // 获取所有的选项\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n}\r\n// 代理\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[target][key] // vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) {\r\n    let data = vm.$options.data // data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n    vm._data = data // 我将返回的对象放到了_data上\r\n    // 对数据进行劫持 vue2里采用了一个api defineProperty\r\n    observe(data)\r\n\r\n    // 将vm._data 用vm来代理就可以了\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed\r\n    const watchers = vm._computedWatchers = {} // 将计算属性watcher保存到vm上\r\n    for (let key in computed) {\r\n        let userDef = computed[key]\r\n\r\n        // 我们需要监控计算属性中 get的变化\r\n        let fn = typeof userDef === 'function' ? userDef : userDef.get\r\n\r\n        // 如果直接new Watcher 默认就会执行fn\r\n        watchers[key] = new Watcher(vm, fn, { lazy: true }) // 不要立即执行 要懒执行\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    // const getter = typeof userDef === 'function' ? userDef : userDef.get\r\n    const setter = userDef.set || (() => { })\r\n    // console.log(getter, setter)\r\n\r\n    // 可以通过实例拿到对应的属性\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n\r\nfunction createComputedGetter(key) {\r\n    return function () {\r\n        const watcher = this._computedWatchers[key] // 获取到对应属性的watcher\r\n        if (watcher.dirty) {\r\n            // 如果是脏的就去执行 用户传入的函数\r\n            watcher.evaluate()\r\n        }\r\n        return this.value\r\n    }\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { callHook, mountComponent } from \"./lifeCycle\"\r\nimport { initState } from \"./state\"\r\nimport { mergeOptions } from \"./utils\"\r\n\r\nexport function initMixin(Vue) {// 就是给Vue增加init方法的\r\n    Vue.prototype._init = function (options) { // 用于初始化操作\r\n        // console.log(options)\r\n        // vue vm.$options 就是获取用户的配置\r\n        // 我们使用的 vue的时候 $nextTick $data $attr.....内部属性\r\n        const vm = this\r\n        // this.constructor.options vue的全局选项和用户传入的options做合并\r\n        // 我们定义的全局指令和过滤器...都会挂在到实例上\r\n        vm.$options = mergeOptions(this.constructor.options, options) // 将用户的选项挂在到实例上\r\n\r\n        callHook(vm, 'beforeCreate')\r\n        // 初始化状态，初始化计算属性，watch\r\n        initState(vm)\r\n        callHook(vm, 'created')\r\n\r\n        if (options.el) {\r\n            vm.$mount(options.el) // 实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if (!ops.render) { // 先进行查找有没有render函数\r\n            let template // 没有render看一下是否写了template，没写template采用外部的template\r\n            if (!ops.template && el) { // 没有写模板 但是写了el\r\n                template = el.outerHTML\r\n            } else {\r\n                if (el) {\r\n                    template = ops.template // 如果有el 则采用模板的内容\r\n                }\r\n            }\r\n            // 写了template就用写了的template\r\n            // console.log(template)\r\n            if (template) {\r\n                // 这里需要对模板进行编译\r\n                const render = compileToFunction(template)\r\n                ops.render = render\r\n\r\n            }\r\n        }\r\n        mountComponent(vm, el) // 组件的挂载\r\n        // 最终就可以获取render方法\r\n        // script 标签引用的vue.global.js这个编译过程实在浏览器运行的\r\n        // runtime是不包含模板编译的，整个编译是打包的时候通过loader来转义.vue文件的，用runtime的时候不能使用template（.vue文件的模板）\r\n\r\n    }\r\n}","import { initGlobalAPI } from \"./globalApi\"\r\nimport { initMixin } from \"./init\"\r\nimport { initLifeCycle } from \"./lifeCycle\"\r\nimport { nextTick } from \"./observe/watcher\"\r\n\r\n// 将所有的方法都耦合在一起\r\nfunction Vue(options) { // options就是用户的选项\r\n    this._init(options)\r\n}\r\nVue.prototype.$nextTick = nextTick\r\ninitMixin(Vue) // 扩展了init方法\r\ninitLifeCycle(Vue)\r\n\r\ninitGlobalAPI(Vue)\r\n\r\nexport default Vue"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeField","hasOwnProperty","initGlobalAPI","Vue","mixin","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","start","node","push","chars","text","replace","end","pop","length","advance","n","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","startTagMatch","endTagMatch","console","log","genProps","str","i","obj","split","item","JSON","stringify","slice","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","genChildren","map","ast","code","compileToFunction","template","render","Function","id","Dep","subs","target","addDep","watcher","update","pushTarget","popTarget","Watcher","vm","fn","renderWatcher","getter","deps","depsId","Set","lazy","dirty","undefined","get","dep","has","add","addSub","queueWatcher","queue","pending","flushSchedulerQueue","flushQueue","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","cb","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","observe","characterData","textContent","setImmediate","setTimeout","createElementVNode","data","vnode","createTextVNode","createElm","el","createElement","patchProps","appendChild","props","styleName","style","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","initLifeCycle","prototype","_update","$el","_c","arguments","_v","_s","_render","$options","call","mountComponent","updateComponent","xx","callHook","handlers","handler","Observer","walk","Object","keys","defineReactive","defineProperty","depend","set","newValue","notify","initState","opts","initData","computed","initComputed","proxy","_data","watchers","_computedWatchers","userDef","defineComputed","setter","createComputedGetter","evaluate","initMixin","_init","constructor","$mount","querySelector","ops","outerHTML","$nextTick"],"mappings":"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"}