// 主线程是单线程，代码从上到下执行
// setTimeout(() => {
//     console.log('ok')
// }, 1000)
// while (true) {

// }



// 1.执行js脚本就是一个宏任务
// 2.调用webApi（宏任务） 如果成功后会将回调放到我们的宏任务队列中（消息队列是唯一的）
// 3.每次执行宏任务的时候 都会创造一个微任务队列（宏任务整个过程中只有一个 微任务队列产生多次）
// 4.每次会清空微任务，清空后会再宏任务中取出一个执行，直到全部执行完毕（微任务中创建微任务是放在当前微任务队列的最后,微任务队列中创建宏任务也是放在异步队列（消息队列/宏任务队列）的最后）

// 同一时间内 大量操作dom 会被合并成一个 一起渲染（布局抖动）

// 》 分成两个队列的目的就是为了区分执行时机
// 所有的异步任务 都是 每次清空微任务，再去取一个宏任务

// 要点：
// 1.页面渲染在微任务之后
// 2.除了promise MutationObserver Node中的nextTick 是微任务 其他都是宏任务
// 3.除了第一次的宏任务之外 其他的都是先执行微任务 再执行宏任务（微任务比宏任务块）


